<cms_webpart version="10.0">
  <NewDataSet>
    <cms_webpart>
      <WebPartID>2699</WebPartID>
      <WebPartName>AdvancedCategorySelector</WebPartName>
      <WebPartDisplayName>Advanced Category Selector (UI)</WebPartDisplayName>
      <WebPartDescription>Allows for the selection and assignment of categories to this Document/Node, including binding tables</WebPartDescription>
      <WebPartFileName>~/CMSModules/RelationshipsExtended/Controls/RelatedCategories.ascx</WebPartFileName>
      <WebPartProperties>&lt;form version="2"&gt;&lt;field allowempty="true" column="RootCategory" columnsize="200" columntype="text" guid="87f986f7-95cb-4234-a3c5-f5a5c58781f3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Root Category&lt;/fieldcaption&gt;&lt;fielddescription&gt;Root Category, for Trees types the Tree structure will start from this node.  For list it will display only categories under this node.  If left blank it will take the Category Root as it's starting.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CategorySelector&lt;/controlname&gt;&lt;DisplayGeneralCategories&gt;True&lt;/DisplayGeneralCategories&gt;&lt;DisplayPersonalCategories&gt;True&lt;/DisplayPersonalCategories&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="CategoryDisplayMode" columnsize="50" columntype="text" guid="f725e056-75a3-4197-9a9c-0cb258932c7f" hasdependingfields="true" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;List&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Display Mode&lt;/fieldcaption&gt;&lt;fielddescription&gt;How you want the categories presented.  In a Tree structure, or a searchable list.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;List;Searchable List
Tree;Structured Tree&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ExpandToLevel" columntype="integer" dependsonanotherfield="true" guid="366cf706-5f34-41ff-9d2a-3987e4d84b84" publicfield="false" reftype="Required" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;1&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Expand to Nth Level&lt;/fieldcaption&gt;&lt;fielddescription&gt;From the root category, how many levels down should be expanded out by default.  &lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%CategoryDisplayMode.Value==&amp;quot;Tree&amp;quot;|(user)administrator|(hash)8eea08dc61b6a19cb31f9123e8f8cd388b57c327ddc9cd3889c691c46edb7484%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="OnlyLeafSelectable" columntype="boolean" dependsonanotherfield="true" guid="f64ccc50-e444-49cd-bbfa-a05b5879df89" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;true&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Only Leafs Selectable&lt;/fieldcaption&gt;&lt;fielddescription&gt;If Selected, only the bottom most tree node (leaf) can be selected.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%CategoryDisplayMode.Value==&amp;quot;Tree&amp;quot;|(user)administrator|(hash)8eea08dc61b6a19cb31f9123e8f8cd388b57c327ddc9cd3889c691c46edb7484%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ParentSelectsChildren" columntype="boolean" dependsonanotherfield="true" guid="cf39ba6c-70b3-4fed-a443-39bc30d134d7" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;true&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Parent Selects Children&lt;/fieldcaption&gt;&lt;fielddescription&gt;If Selected, parent nodes will act as a Toggle for the Leaf nodes underneath them.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%CategoryDisplayMode.Value==&amp;quot;Tree&amp;quot;|(user)administrator|(hash)8eea08dc61b6a19cb31f9123e8f8cd388b57c327ddc9cd3889c691c46edb7484%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="MinimumCategories" columntype="integer" guid="de333414-4221-4b07-90d2-c58ef584e441" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;explanationtext&gt;Only applicable on selection, all pages will start with no categories.&lt;/explanationtext&gt;&lt;fieldcaption&gt;Minimum Categories&lt;/fieldcaption&gt;&lt;fielddescription&gt;The minimum number of categories a user must select.  Leave blank to have no minimum.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="MaximumCategories" columntype="integer" guid="c12604fd-8e31-4315-b91a-29acf869dee2" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Maximum Categories&lt;/fieldcaption&gt;&lt;fielddescription&gt;The Maximum Categories a user can select.  Leave blank to have no limit.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="SaveMode" columnsize="50" columntype="text" guid="5ad99e9a-3166-4f46-a61d-b1b2e513dab4" hasdependingfields="true" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;ToCategories&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Save Mode&lt;/fieldcaption&gt;&lt;fielddescription&gt;Sets how you want to save the selection, either setting the Document Category relationship (Kentico's CMS_DocumentCategories), to Node Categories (custom CMS_NodeCategories), or a custom joining table of your choosing.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;ToCategories;Set Document Categories
ToNodeCategories;Set Node Categories (CMS_TreeCategory)
ToJoinTable;To Joining Table&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="BindOnPrimaryNodeOnly" columntype="boolean" dependsonanotherfield="true" guid="0851748f-834e-4a73-a6bd-1f61ebb999c3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;True&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Bind On Primary Node Only&lt;/fieldcaption&gt;&lt;fielddescription&gt;If using either Node Categories or a Join table with NodeID, and the current Node is a Linked Document, this will edit categories on the primary node instead of the linked node.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToNodeCategories&amp;quot; || SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)1851391df47faa80043a36fabe982a4da7da9d882f881cd349a1028ba47ab1af%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="JoinTableThisObjectForeignKey" columnsize="200" columntype="text" dependsonanotherfield="true" guid="a89ea0f3-e882-405c-8b69-fb8cc2722108" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;This Object Foreign Key&lt;/fieldcaption&gt;&lt;fielddescription&gt;The column name of the value that will be stored into the Join Table's Left Field Name.

Must be the same data type.  Some possibilities are NodeID, DocumentID, DocumentGUID, ItemID, ItemGUID, etc.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="JoinTableForeignKeySource" columnsize="25" columntype="text" dependsonanotherfield="true" guid="6484e44d-81b0-4410-abe0-51d47929a045" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;Page&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Foreign Key Source&lt;/fieldcaption&gt;&lt;fielddescription&gt;Where the Foreign Key Value is derived from.  

If Current Page, then it will grab it from the current document.

If Edited Object, it will grab it from the UIContext's EditedObject
&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;Page;Current Page
EditedObject;Edited Object&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="JoinTableName" columnsize="200" columntype="text" dependsonanotherfield="true" guid="2b151fa2-b3eb-4d26-9b95-2b4819c3f4ef" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Join Table Code Name&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can be either a Custom Table, or a Module Class .

To create your Module's Info/InfoProvider class, Edit your Module Class, and click on the "Code" menu on the left hand side.  Also see Kentico Documentation on "setting the type information for module classes" and "Enabling export and staging for the data of classes."&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="JoinTableLeftFieldName" columnsize="200" columntype="text" dependsonanotherfield="true" guid="f664a812-df4f-4c6b-a617-cd04db5f3c1a" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Join Table Left Field Name&lt;/fieldcaption&gt;&lt;fielddescription&gt;The column name of the Join Table that will store This Object Foreign Key's value.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="JoinTableRightFieldName" columnsize="200" columntype="text" dependsonanotherfield="true" guid="bb86c56b-ceae-47af-a0b3-33faf2b6035c" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Join Table Right Field Name&lt;/fieldcaption&gt;&lt;fielddescription&gt;The field name of the column that will store the Category's Field Save Type (ID, Guid, or CodeName)&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="JoinTableGUIDFieldOverride" columnsize="200" columntype="text" dependsonanotherfield="true" guid="bed7266d-9046-4b76-8391-0c83b711e9fd" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;explanationtext&gt;Not required if GUID field defined in object's TypeInfo class&lt;/explanationtext&gt;&lt;fieldcaption&gt;Join Table GUID FieldName Override&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the Joining Table has a GUID identifier field, please enter the field name here.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="JoinTableLastModifiedFieldOverride" columnsize="200" columntype="text" dependsonanotherfield="true" guid="70387203-1edf-4ea6-9e8b-3ac254e5bb99" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;explanationtext&gt;Not required if Modified field defined in object's TypeInfo class&lt;/explanationtext&gt;&lt;fieldcaption&gt;Join Table Last Modified FieldName&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the Join Table has a Last Modified Field, enter the Field Name here.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="JoinTableCodeNameFieldOverride" columnsize="200" columntype="text" dependsonanotherfield="true" guid="a2618a3f-ff22-4224-9f95-da025115cc5b" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;explanationtext&gt;Not required if CodeName field defined in object's TypeInfo class&lt;/explanationtext&gt;&lt;fieldcaption&gt;Join Table Code Name FieldName&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the Join Table has a Code Name field, enter the Field Name here.  The Code Name format will be the ClassName_ThisObjectForeignKey_CategoryForiegnKey&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="JoinTableSiteIDFieldOverride" columnsize="200" columntype="text" dependsonanotherfield="true" guid="c3ff05ee-a1e3-4916-b671-f68bb89be5c6" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;explanationtext&gt;Not required if SiteID field defined in object's TypeInfo class&lt;/explanationtext&gt;&lt;fieldcaption&gt;Join Table Site ID FieldName&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the Join Table has a SiteID field, enter the Field Name here.&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value == &amp;quot;ToJoinTable&amp;quot;|(user)administrator|(hash)51998a53682e537d58c162225c1f2b99c4fe97fdc1769661bce3bbefb02e2058%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="FieldSaveType" columnsize="200" columntype="text" dependsonanotherfield="true" guid="50f0f1b0-6d93-4a87-a7e1-9f64e2a5b86d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;ID&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Field Save Type&lt;/fieldcaption&gt;&lt;fielddescription&gt;For saving to Custom Join Table, what Category identifier you wish to assign to the Join Table's Right Field&lt;/fielddescription&gt;&lt;visiblemacro ismacro="true"&gt;{%SaveMode.Value != &amp;quot;ToCategories&amp;quot; &amp;amp;&amp;amp; SaveMode.Value != &amp;quot;ToNodeCategories&amp;quot;|(user)administrator|(hash)cf28c1b639466291a1e5ffa9a2f2aadea340857085a1e71504ce467fa0951a61%}&lt;/visiblemacro&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;ID;Category IDs
GUID;Category GUIDs
CategoryName;Category Name&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="WhereFilter" columntype="longtext" guid="802cfb01-9f4c-4a8e-8f3a-97f892690915" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Where Filter&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can specify a where condition to further limit Nodes.  Only nodes that match this where condition will be loaded.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;WhereCondition&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="OrderBy" columntype="longtext" guid="4cd47f3b-09e6-4349-9726-7029d4308af5" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Order By&lt;/fieldcaption&gt;&lt;fielddescription&gt;Optional Order by.  If Blank, it will default to the CategoryOrder for Trees, and CategoryDisplayName for Lists.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;OrderBy&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;/form&gt;</WebPartProperties>
      <WebPartCategoryID>446</WebPartCategoryID>
      <WebPartGUID>c957bd2a-6560-42a0-81cf-0880816cbc39</WebPartGUID>
      <WebPartLastModified>2019-07-24T17:40:07.5212817-05:00</WebPartLastModified>
      <WebPartType>0</WebPartType>
      <WebPartLoadGeneration>0</WebPartLoadGeneration>
      <WebPartDefaultValues>&lt;form&gt;&lt;/form&gt;</WebPartDefaultValues>
      <WebPartSkipInsertProperties>false</WebPartSkipInsertProperties>
      <WebPartDefaultConfiguration>&lt;page /&gt;</WebPartDefaultConfiguration>
      <WebPartIconClass>icon-list</WebPartIconClass>
    </cms_webpart>
    <cms_webpart>
      <WebPartID>2700</WebPartID>
      <WebPartName>RelationshipExtended_RelatedPageSelector_Tree</WebPartName>
      <WebPartDisplayName>Related Page Tree Selector</WebPartDisplayName>
      <WebPartFileName>~/CMSModules/RelationshipsExtended/Controls/RelatedPage_Tree.ascx</WebPartFileName>
      <WebPartProperties>&lt;form version="2"&gt;&lt;field column="RelationshipName" columnsize="200" columntype="text" guid="74034cbd-0a54-40c5-9c42-b98293cbbf6d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Relationship Name&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="DirectionMode" columnsize="50" columntype="text" guid="d3463fa8-47e3-4e93-a2e9-4d9e22101f09" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;LeftNode&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Current Node Direction&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;LeftNode;Left Side
RightNode;Right Side&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="AllowSwitchSides" columntype="boolean" guid="3f917adb-92f0-4789-8b8b-6903d5c849ba" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;False&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Allow Switch Sides&lt;/fieldcaption&gt;&lt;fielddescription&gt;Check if you wish to allow an assignment of documents that is flipped from the normal Direction.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="AllowedPageTypes" columntype="longtext" guid="cda35b98-132f-45eb-8868-90cdac87e6bf" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Allowed Page Types&lt;/fieldcaption&gt;&lt;fielddescription&gt;Page types that you can assign to this relationship.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;controlname&gt;Uni_selector&lt;/controlname&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DisplayNameFormat&gt;{% ClassDisplayName %}&lt;/DisplayNameFormat&gt;&lt;EditDialogWindowHeight&gt;700&lt;/EditDialogWindowHeight&gt;&lt;EditDialogWindowWidth&gt;1000&lt;/EditDialogWindowWidth&gt;&lt;EditWindowName&gt;EditWindow&lt;/EditWindowName&gt;&lt;EncodeOutput&gt;True&lt;/EncodeOutput&gt;&lt;GlobalObjectSuffix ismacro="true"&gt;{$general.global$}&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectSiteName&gt;#currentsite&lt;/ObjectSiteName&gt;&lt;ObjectType&gt;CMS.Class&lt;/ObjectType&gt;&lt;OrderBy&gt;ClassDisplayName&lt;/OrderBy&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ReturnColumnName&gt;ClassName&lt;/ReturnColumnName&gt;&lt;ReturnColumnType&gt;id&lt;/ReturnColumnType&gt;&lt;SelectionMode&gt;2&lt;/SelectionMode&gt;&lt;UseDefaultNameFilter&gt;True&lt;/UseDefaultNameFilter&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;WhereCondition&gt;ClassIsDocumentType = 1&lt;/WhereCondition&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="WhereCondition" columntype="longtext" guid="6414912d-be22-497c-a80c-fe0084c042a3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Where Condition&lt;/fieldcaption&gt;&lt;fielddescription&gt;Additional Where Condition on which pages should be displayed.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;WhereCondition&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="CurrentNodeID" columntype="integer" guid="d2fb525c-02d5-42d7-bfa9-a63b682a2bd3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Current NodeID&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="BindOnPrimaryNodeOnly" columntype="boolean" guid="32903b8c-c3e1-4d58-9625-374ac9f10653" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;True&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Bind On Primary Node Only&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the current Node is a Linked Document, this will edit bindings on the primary node instead of the linked node.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="RelatedNodeSite" columnsize="200" columntype="text" guid="8129fbd6-ee7f-4dea-a616-06d6e1ff68f3" publicfield="false" reftype="Required" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;#currentsite&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Site&lt;/fieldcaption&gt;&lt;fielddescription&gt;Which site to show the related pages from.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;controlname&gt;Uni_selector&lt;/controlname&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DisplayNameFormat&gt;{% SiteDisplayName %}&lt;/DisplayNameFormat&gt;&lt;EditDialogWindowHeight&gt;700&lt;/EditDialogWindowHeight&gt;&lt;EditDialogWindowWidth&gt;1000&lt;/EditDialogWindowWidth&gt;&lt;EditWindowName&gt;EditWindow&lt;/EditWindowName&gt;&lt;EncodeOutput&gt;True&lt;/EncodeOutput&gt;&lt;GlobalObjectSuffix ismacro="true"&gt;{$general.global$}&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectType&gt;cms.site&lt;/ObjectType&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ReturnColumnName&gt;SiteName&lt;/ReturnColumnName&gt;&lt;ReturnColumnType&gt;id&lt;/ReturnColumnType&gt;&lt;SelectionMode&gt;1&lt;/SelectionMode&gt;&lt;SpecialFields&gt;;(All Sites)
#currentsite;(Current Site)&lt;/SpecialFields&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="MaxRelationships" columntype="integer" guid="63e96b77-d382-4594-ba4a-b55e984cc7a4" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;0&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Max Relationships&lt;/fieldcaption&gt;&lt;fielddescription&gt;Any number below 1 means unlimited&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;category name="TreeSpecific"&gt;&lt;properties&gt;&lt;caption&gt;Tree Specific&lt;/caption&gt;&lt;visible&gt;True&lt;/visible&gt;&lt;/properties&gt;&lt;/category&gt;&lt;field allowempty="true" column="StartingPaths" columntype="longtext" guid="8078fd47-bc3f-424c-92dc-18fc1f34f13f" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Starting Paths&lt;/fieldcaption&gt;&lt;fielddescription&gt;Starting Node Alias Paths to display, each path on a new line.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextAreaControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Wrap&gt;True&lt;/Wrap&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="RemoveUnselectableChildTrees" columntype="boolean" guid="947283c3-5f53-49e4-ac26-be607eb5487d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;true&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Remove Sub Trees with No Selections&lt;/fieldcaption&gt;&lt;fielddescription&gt;If true, it will remove any sub trees that don't have any possible selections.  Uncheck if you need to see the tree structure regardless if it has a selectable element.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="SelectionMode" columnsize="25" columntype="text" guid="245b5f40-6578-42cb-b0c9-5a4b7cff31d8" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;Checkbox&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Selection Mode&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;Checkbox;Select Multiple then Add (Checkbox + Button)
Individual;Add Individually&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="DisplayNameFormat" columntype="longtext" guid="5b23fa0c-94f8-4728-8859-63a9b2de073c" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Display Name Format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a custom Display Name Format for the page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields. 

ex: {% NodeName %} - {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoSize&gt;False&lt;/AutoSize&gt;&lt;controlname&gt;MacroEditor&lt;/controlname&gt;&lt;EnablePositionMember&gt;False&lt;/EnablePositionMember&gt;&lt;EnableSections&gt;False&lt;/EnableSections&gt;&lt;EnableViewState&gt;False&lt;/EnableViewState&gt;&lt;Height&gt;100&lt;/Height&gt;&lt;Language&gt;0&lt;/Language&gt;&lt;ShowBookmarks&gt;False&lt;/ShowBookmarks&gt;&lt;ShowLineNumbers&gt;False&lt;/ShowLineNumbers&gt;&lt;ShowMacroSelector&gt;False&lt;/ShowMacroSelector&gt;&lt;SingleLineMode&gt;False&lt;/SingleLineMode&gt;&lt;SingleMacroMode&gt;False&lt;/SingleMacroMode&gt;&lt;SupportPasteImages&gt;False&lt;/SupportPasteImages&gt;&lt;Width&gt;100%&lt;/Width&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ToolTipFormat" columntype="longtext" guid="b8e62cd9-639c-41be-a921-9cbe231f692b" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;ToolTip Format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a hover to the selectable page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields.

ex: {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoSize&gt;False&lt;/AutoSize&gt;&lt;controlname&gt;MacroEditor&lt;/controlname&gt;&lt;EnablePositionMember&gt;False&lt;/EnablePositionMember&gt;&lt;EnableSections&gt;False&lt;/EnableSections&gt;&lt;EnableViewState&gt;False&lt;/EnableViewState&gt;&lt;Height&gt;100&lt;/Height&gt;&lt;Language&gt;0&lt;/Language&gt;&lt;ShowBookmarks&gt;False&lt;/ShowBookmarks&gt;&lt;ShowLineNumbers&gt;False&lt;/ShowLineNumbers&gt;&lt;ShowMacroSelector&gt;False&lt;/ShowMacroSelector&gt;&lt;SingleLineMode&gt;False&lt;/SingleLineMode&gt;&lt;SingleMacroMode&gt;False&lt;/SingleMacroMode&gt;&lt;SupportPasteImages&gt;False&lt;/SupportPasteImages&gt;&lt;Width&gt;100%&lt;/Width&gt;&lt;/settings&gt;&lt;/field&gt;&lt;/form&gt;</WebPartProperties>
      <WebPartCategoryID>446</WebPartCategoryID>
      <WebPartGUID>e77bd068-2faf-4767-a114-2cfbb30f97be</WebPartGUID>
      <WebPartLastModified>2020-09-04T11:48:02.7765189-05:00</WebPartLastModified>
      <WebPartType>0</WebPartType>
      <WebPartLoadGeneration>0</WebPartLoadGeneration>
      <WebPartDefaultValues>&lt;form&gt;&lt;/form&gt;</WebPartDefaultValues>
      <WebPartSkipInsertProperties>false</WebPartSkipInsertProperties>
      <WebPartDefaultConfiguration>&lt;page /&gt;</WebPartDefaultConfiguration>
      <WebPartIconClass>icon-w-webpart-default</WebPartIconClass>
    </cms_webpart>
    <cms_webpart>
      <WebPartID>2701</WebPartID>
      <WebPartName>RelationshipExtended_RelatedPages</WebPartName>
      <WebPartDisplayName>Related Pages (UI)</WebPartDisplayName>
      <WebPartDescription>Displays Related Pages for the given relationship, allowing sorting for adhoc ones and deletion of pages.</WebPartDescription>
      <WebPartFileName>~/CMSModules/RelationshipsExtended/Controls/Relateddocs_List.ascx</WebPartFileName>
      <WebPartProperties>&lt;form version="2"&gt;&lt;field column="RelationshipName" columnsize="200" columntype="text" guid="74034cbd-0a54-40c5-9c42-b98293cbbf6d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Relationship Name&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="DirectionMode" columnsize="20" columntype="text" guid="ca282967-ff18-46f8-a993-51dee5b49d9f" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;LeftNode&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Direction&lt;/fieldcaption&gt;&lt;fielddescription&gt;How this page relates to related pages.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;LeftNode;Current Node is Left Node
RightNode;Current Node is Right Node&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="AllowSwitchSides" columntype="boolean" guid="6cce0689-edda-4633-ab73-000ded1eac8d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;False&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Allow Switch Sides&lt;/fieldcaption&gt;&lt;fielddescription&gt;Check if you wish to allow an assignment of documents that is flipped from the normal Direction.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="DisableSort" columntype="boolean" guid="7ea0abf0-629b-4282-aa2a-fe9cad39ead4" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;False&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Disable Sort&lt;/fieldcaption&gt;&lt;fielddescription&gt;Only applicable to Ad Hoc relationships.

Should be true for read only (right side).&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="CurrentNodeID" columntype="integer" guid="d2fb525c-02d5-42d7-bfa9-a63b682a2bd3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Current NodeID (Override)&lt;/fieldcaption&gt;&lt;fielddescription&gt;If not set, will pull from the QueryString values&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="BindOnPrimaryNodeOnly" columntype="boolean" guid="889965d6-b064-4802-80f0-e3fb3cf0c7c2" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;True&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Bind On Primary Node Only&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the current Node is a Linked Document, this will edit bindings on the primary node instead of the linked node.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="RelatedNodeSite" columnsize="200" columntype="text" guid="887261ba-283f-42ca-ac5c-195ca7bb98c0" publicfield="false" reftype="Required" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;#currentsite&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Site&lt;/fieldcaption&gt;&lt;fielddescription&gt;Which site to show the related pages from.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;controlname&gt;Uni_selector&lt;/controlname&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DisplayNameFormat&gt;{% SiteDisplayName %}&lt;/DisplayNameFormat&gt;&lt;EditDialogWindowHeight&gt;700&lt;/EditDialogWindowHeight&gt;&lt;EditDialogWindowWidth&gt;1000&lt;/EditDialogWindowWidth&gt;&lt;EditWindowName&gt;EditWindow&lt;/EditWindowName&gt;&lt;EncodeOutput&gt;True&lt;/EncodeOutput&gt;&lt;GlobalObjectSuffix ismacro="true"&gt;{$general.global$}&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectType&gt;cms.site&lt;/ObjectType&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ReturnColumnName&gt;SiteName&lt;/ReturnColumnName&gt;&lt;ReturnColumnType&gt;id&lt;/ReturnColumnType&gt;&lt;SelectionMode&gt;1&lt;/SelectionMode&gt;&lt;SpecialFields&gt;;(All Sites)
#currentsite;(Current Site)&lt;/SpecialFields&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="CurrentCulture" columnsize="10" columntype="text" guid="074fd490-4139-4844-aaab-0d22f52e9a4e" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Current Culture&lt;/fieldcaption&gt;&lt;fielddescription&gt;If not set, will use query string from UI.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;category name="AdditionalDisplay"&gt;&lt;properties&gt;&lt;caption&gt;Additional Display&lt;/caption&gt;&lt;visible&gt;True&lt;/visible&gt;&lt;/properties&gt;&lt;/category&gt;&lt;field allowempty="true" column="AllowedPageTypes" columntype="longtext" guid="2ff72560-0174-41fa-86c6-d2e4b7db1700" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Allowed Page Types&lt;/fieldcaption&gt;&lt;fielddescription&gt;Page types that you can assign to this relationship, this will determine if the custom DisplayNameFormat and ToolTipFormat can be applied.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;controlname&gt;Uni_selector&lt;/controlname&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DisplayNameFormat&gt;{% ClassDisplayName %}&lt;/DisplayNameFormat&gt;&lt;EditDialogWindowHeight&gt;700&lt;/EditDialogWindowHeight&gt;&lt;EditDialogWindowWidth&gt;1000&lt;/EditDialogWindowWidth&gt;&lt;EditWindowName&gt;EditWindow&lt;/EditWindowName&gt;&lt;EncodeOutput&gt;True&lt;/EncodeOutput&gt;&lt;GlobalObjectSuffix ismacro="true"&gt;{$general.global$}&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectSiteName&gt;#currentsite&lt;/ObjectSiteName&gt;&lt;ObjectType&gt;CMS.Class&lt;/ObjectType&gt;&lt;OrderBy&gt;ClassDisplayName&lt;/OrderBy&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ReturnColumnName&gt;ClassName&lt;/ReturnColumnName&gt;&lt;ReturnColumnType&gt;id&lt;/ReturnColumnType&gt;&lt;SelectionMode&gt;2&lt;/SelectionMode&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;WhereCondition&gt;ClassIsDocumentType = 1&lt;/WhereCondition&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="DisplayNameFormat" columntype="longtext" guid="00dd04d8-55c9-42d1-99a1-5e84e1b4e624" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Display Name Format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a custom Display Name Format for the page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields. 

ex: {% NodeName %} - {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoSize&gt;False&lt;/AutoSize&gt;&lt;controlname&gt;MacroEditor&lt;/controlname&gt;&lt;EnablePositionMember&gt;False&lt;/EnablePositionMember&gt;&lt;EnableSections&gt;False&lt;/EnableSections&gt;&lt;EnableViewState&gt;False&lt;/EnableViewState&gt;&lt;Height&gt;100&lt;/Height&gt;&lt;Language&gt;0&lt;/Language&gt;&lt;ShowBookmarks&gt;False&lt;/ShowBookmarks&gt;&lt;ShowLineNumbers&gt;False&lt;/ShowLineNumbers&gt;&lt;ShowMacroSelector&gt;False&lt;/ShowMacroSelector&gt;&lt;SingleLineMode&gt;False&lt;/SingleLineMode&gt;&lt;SingleMacroMode&gt;False&lt;/SingleMacroMode&gt;&lt;SupportPasteImages&gt;False&lt;/SupportPasteImages&gt;&lt;Width&gt;100%&lt;/Width&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ToolTipFormat" columntype="longtext" guid="b3c9e13a-3464-48b5-b4f0-b23dec056aa9" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;ToolTip Format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a hover to the selectable page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields.

ex: {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoSize&gt;False&lt;/AutoSize&gt;&lt;controlname&gt;MacroEditor&lt;/controlname&gt;&lt;EnablePositionMember&gt;False&lt;/EnablePositionMember&gt;&lt;EnableSections&gt;False&lt;/EnableSections&gt;&lt;EnableViewState&gt;False&lt;/EnableViewState&gt;&lt;Height&gt;100&lt;/Height&gt;&lt;Language&gt;0&lt;/Language&gt;&lt;ShowBookmarks&gt;False&lt;/ShowBookmarks&gt;&lt;ShowLineNumbers&gt;False&lt;/ShowLineNumbers&gt;&lt;ShowMacroSelector&gt;False&lt;/ShowMacroSelector&gt;&lt;SingleLineMode&gt;False&lt;/SingleLineMode&gt;&lt;SingleMacroMode&gt;False&lt;/SingleMacroMode&gt;&lt;SupportPasteImages&gt;False&lt;/SupportPasteImages&gt;&lt;Width&gt;100%&lt;/Width&gt;&lt;/settings&gt;&lt;/field&gt;&lt;/form&gt;</WebPartProperties>
      <WebPartCategoryID>447</WebPartCategoryID>
      <WebPartGUID>3ffbb3f1-44f2-499d-abe4-6beb27ad7160</WebPartGUID>
      <WebPartLastModified>2020-09-04T11:49:55.719207-05:00</WebPartLastModified>
      <WebPartType>9</WebPartType>
      <WebPartLoadGeneration>0</WebPartLoadGeneration>
      <WebPartDefaultValues>&lt;form&gt;&lt;/form&gt;</WebPartDefaultValues>
      <WebPartSkipInsertProperties>false</WebPartSkipInsertProperties>
      <WebPartDefaultConfiguration>&lt;page /&gt;</WebPartDefaultConfiguration>
      <WebPartIconClass>icon-w-webpart-default</WebPartIconClass>
    </cms_webpart>
    <cms_webpart>
      <WebPartID>2703</WebPartID>
      <WebPartName>M_NEdit_TreeAndOrderSupport</WebPartName>
      <WebPartDisplayName>Edit bindings (Tree+Order Support)</WebPartDisplayName>
      <WebPartDescription>Allows users to manage many-to-many relationships between objects (through a UniSelector) with support for binding to a Node, and also support for Bindings with Order.

To enable Ordering, Binding ObjectInfo class must implement the IBindingBaseInfo and IOrderableBaseInfo interfaces (in the RelationshipsExtended.Interfaces Namespace)

See Documentation for Control Extender base.</WebPartDescription>
      <WebPartFileName>~/CMSModules/RelationshipsExtended/Controls/UIControls/OrderableBindingEditItemWithNodeSupport.ascx</WebPartFileName>
      <WebPartProperties>&lt;form version="2"&gt;&lt;field allowempty="true" column="ObjectType" columnsize="100" columntype="text" guid="1f3b7a49-549e-4cb7-a7fa-5b582c0ddab8" publicfield="false" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Object type&lt;/fieldcaption&gt;&lt;fielddescription&gt;Object type for editing. If '(default)' is set, object type is got from context.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;objectselector&lt;/controlname&gt;&lt;DialogWindowHeight&gt;590&lt;/DialogWindowHeight&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DialogWindowWidth&gt;668&lt;/DialogWindowWidth&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;GlobalObjectSuffix&gt;(global)&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectType&gt;cms.class&lt;/ObjectType&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ResourcePrefix&gt;objectselect&lt;/ResourcePrefix&gt;&lt;ReturnColumnName&gt;ClassName&lt;/ReturnColumnName&gt;&lt;SelectionMode&gt;1&lt;/SelectionMode&gt;&lt;SpecialFields&gt;;(default)&lt;/SpecialFields&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="BindingObjectType" columnsize="200" columntype="text" guid="48ea319b-db66-430c-9020-f1709e8ce4ab" publicfield="false" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;{$webpart.documentation.bindingobjectprovidertype$}&lt;/fieldcaption&gt;&lt;fielddescription&gt;{$webpart.bindingobjectprovidertype.description$}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;objecttypeselector&lt;/controlname&gt;&lt;DisplayAll&gt;False&lt;/DisplayAll&gt;&lt;ObjectTypeList&gt;ObjectTypes.BindingObjectTypes&lt;/ObjectTypeList&gt;&lt;SortItems&gt;True&lt;/SortItems&gt;&lt;SpecialFields&gt;;(none)&lt;/SpecialFields&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="TargetObjectType" columnsize="200" columntype="text" guid="fd5ed944-e23b-4ade-bb2a-d9f935ce3564" publicfield="false" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Target object type&lt;/fieldcaption&gt;&lt;fielddescription&gt;{$webpart.description.bindingobjecttype$}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;objecttypeselector&lt;/controlname&gt;&lt;DisplayAll&gt;False&lt;/DisplayAll&gt;&lt;ObjectTypeList&gt;ObjectTypes.MainObjectTypes&lt;/ObjectTypeList&gt;&lt;SortItems&gt;True&lt;/SortItems&gt;&lt;SpecialFields&gt;;(automatic)&lt;/SpecialFields&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="BindOnPrimaryNodeOnly" columntype="boolean" guid="c17bf088-278f-4d74-8a93-45a7ac0e280f" publicfield="false" reftype="Required" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;True&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Bind On Primary Node Only&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the current Node is a Linked Document, this will edit bindings on the primary node instead of the linked node.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ResourcePrefix" columnsize="200" columntype="text" guid="54a22cbe-70dd-4e64-913c-a561adc9ffa7" publicfield="false" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;{$webpart.documentation.resourceprefix$}&lt;/fieldcaption&gt;&lt;fielddescription&gt;{$webpart.resourceprefix.description$}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;textboxcontrol&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="WhereCondition" columnsize="400" columntype="text" guid="8d39cb49-215a-43ca-af58-fc1c60da5004" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Where condition&lt;/fieldcaption&gt;&lt;fielddescription&gt;{$webpart.wherecondition.description$}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;WhereCondition&lt;/controlname&gt;&lt;QueryPart&gt;1&lt;/QueryPart&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="DialogWhereCondition" columnsize="400" columntype="text" guid="ed90f0db-636c-4280-9a38-b04ce53d045d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Dialog where condition&lt;/fieldcaption&gt;&lt;fielddescription&gt;{$webpart.dialogwherecondition.description$}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;WhereCondition&lt;/controlname&gt;&lt;QueryPart&gt;1&lt;/QueryPart&gt;&lt;/settings&gt;&lt;/field&gt;&lt;/form&gt;</WebPartProperties>
      <WebPartCategoryID>444</WebPartCategoryID>
      <WebPartDocumentation>&lt;h1&gt;Orderable Control Extender Class&lt;/h1&gt;
You can create your own extender using the below code to further modify your UniSelector as needed without losing the core functionality.&lt;br /&gt;
&lt;br /&gt;
using CMS;&lt;br /&gt;
using CMS.Base.Web.UI;&lt;br /&gt;
using CMS.DataEngine;&lt;br /&gt;
using CMS.EventLog;&lt;br /&gt;
using CMS.Helpers;&lt;br /&gt;
using CMS.UIControls;&lt;br /&gt;
using CMS.UIControls.UniGridConfig;&lt;br /&gt;
using RelationshipsExtended;&lt;br /&gt;
using RelationshipsExtended.Interfaces;&lt;br /&gt;
using System;&lt;br /&gt;
using System.Collections.Generic;&lt;br /&gt;
using System.Data;&lt;br /&gt;
using System.Linq;&lt;br /&gt;
using System.Web.UI;&lt;br /&gt;
using System.Web.UI.WebControls;&lt;br /&gt;
using Action = CMS.UIControls.UniGridConfig.Action;&lt;br /&gt;
&lt;br /&gt;
[assembly: RegisterCustomClass(&amp;quot;OrderableBindingEditorUniSelectorExtender&amp;quot;, typeof(OrderableBindingEditorUniSelectorExtender))]&lt;br /&gt;
&lt;br /&gt;
namespace RelationshipsExtended&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; public class OrderableBindingEditorUniSelectorExtender : ControlExtender&amp;lt;UniSelector&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public string BindingObjectType&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return ValidationHelper.GetString(Control.Attributes[&amp;quot;BindingObjectType&amp;quot;], &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public string ObjectType&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return ValidationHelper.GetString(Control.Attributes[&amp;quot;ObjectType&amp;quot;], &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public int CorrectObjectID&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return ValidationHelper.GetInteger(Control.Attributes[&amp;quot;CorrectObjectID&amp;quot;], -1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Initializes the control, this looks to see if the Binding Object type is of type IOrderableBaseInfo and IBindingBaseInfo&amp;nbsp;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public override void OnInit()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!string.IsNullOrWhiteSpace(BindingObjectType))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Get the Binding and base Object so we can detect if they are orderable or not.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectFactory = new InfoObjectFactory(BindingObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectSingleton = (BindingObjectFactory != null &amp;amp;&amp;amp; BindingObjectFactory.Singleton != null ? BindingObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectFactory = new InfoObjectFactory(ObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectSingleton = (ObjectFactory != null &amp;amp;&amp;amp; ObjectFactory.Singleton != null ? ObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (BindingObjectSingleton != null &amp;amp;&amp;amp; ObjectSingleton != null &amp;amp;&amp;amp; BindingObjectSingleton is IOrderableBaseInfo &amp;amp;&amp;amp; BindingObjectSingleton is IBindingBaseInfo)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Set the new Grid with actions&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.GridName = &amp;quot;~/CMSModules/RelationshipsExtended/Grids/ControlItemList.xml&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.GridName = &amp;quot;~/CMSModules/RelationshipsExtended/Grids/ControlItemList.xml&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.LoadXmlConfiguration();&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Add the ordering to the DataSet&amp;#39;s Table, then use a TableView to order by that. &amp;nbsp;Hacky but works.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.OnAfterRetrieveData += UniGrid_OnAfterRetrieveData;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Ensures that it retrieves all the rows found so it can order them manually&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.ApplyPageSize = false;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Ensure no sorting.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Control.UniGrid.GridOptions == null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.GridOptions = new UniGridOptions();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.GridOptions.AllowSorting = false;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Catch the Move events&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.OnAction += UniGrid_OnAction;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Get ColumnID of Object it&amp;#39;s referencing for the Grid Actions at various points in the rendering, since this seems to get lost frequently.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SetActions();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.PreRender += UniGrid_PreRender;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.Load += UniGrid_Load;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.OnAfterDataReload += UniGrid_OnAfterDataReload;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Setup Field and Script for Move command.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AddCustomMoveHiddenField();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RegisterCmdScripts();&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Handle current page and size if in URL parameter&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!Control.Page.IsPostBack &amp;amp;&amp;amp; !string.IsNullOrWhiteSpace(URLHelper.GetUrlParameter(RequestContext.RawURL, &amp;quot;OrderableUniPage&amp;quot;)))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int CurrentPage = ValidationHelper.GetInteger(URLHelper.GetUrlParameter(RequestContext.RawURL, &amp;quot;OrderableUniPage&amp;quot;), 1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int CurrentPageSize = ValidationHelper.GetInteger(URLHelper.GetUrlParameter(RequestContext.RawURL, &amp;quot;OrderableUniPageSize&amp;quot;), -1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Control.UniGrid.Pager != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.Pager.CurrentPage = CurrentPage;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (CurrentPageSize &amp;gt; 0)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.Pager.CurrentPageSize = CurrentPageSize;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #region &amp;quot;Ordering Methods&amp;quot;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Handles the Grid Actions, sadly can&amp;#39;t use the default #move #moveup and #movedown because this is technically displaying the Object, not the binding object.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;actionName&amp;quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;actionArgument&amp;quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void UniGrid_OnAction(string actionName, object actionArgument)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectFactory = new InfoObjectFactory(BindingObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectSingleton = BindingObjectFactory.Singleton;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObj = new ObjectQuery(BindingObjectType)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.WhereEquals(((IBindingBaseInfo)BindingObjectSingleton).ParentObjectReferenceColumnName(), CorrectObjectID)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.WhereEquals(((IBindingBaseInfo)BindingObjectSingleton).BoundObjectReferenceColumnName(), actionArgument).FirstObject;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectFactory = new InfoObjectFactory(ObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectSingleton = (ObjectFactory != null &amp;amp;&amp;amp; ObjectFactory.Singleton != null ? ObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bool RefreshData = false;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; switch (actionName)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &amp;quot;custom_move&amp;quot;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Get Custom Move Hidden Field value&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (HiddenField hidField in GetControlsOfType&amp;lt;HiddenField&amp;gt;(Control.UniGrid))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (hidField.ID == &amp;quot;hdnCustomMoveArgs&amp;quot;)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string[] Values = hidField.Value.Split(&amp;#39;:&amp;#39;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Values.Length == 3)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int ObjectID = ValidationHelper.GetInteger(Values[0], 0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int OrigPosition = ValidationHelper.GetInteger(Values[1], 0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int NewPosition = ValidationHelper.GetInteger(Values[2], 0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BindingObj = new ObjectQuery(BindingObjectType)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .WhereEquals(((IBindingBaseInfo)BindingObjectSingleton).ParentObjectReferenceColumnName(), CorrectObjectID)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .WhereEquals(((IBindingBaseInfo)BindingObjectSingleton).BoundObjectReferenceColumnName(), ObjectID).FirstObject;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((IOrderableBaseInfo)BindingObj).SetObjectOrderRelative(NewPosition - OrigPosition);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &amp;quot;custom_moveup&amp;quot;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((IOrderableBaseInfo)BindingObj).MoveObjectUp();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If the current item is the &amp;quot;first&amp;quot; item on the current page, refresh as it may now be on another page&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var UpRows = ((DataSet)Control.UniGrid.DataSource).Tables[0].Rows;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (ValidationHelper.GetInteger(UpRows[0][((BaseInfo)ObjectSingleton).TypeInfo.IDColumn], -1) == ValidationHelper.GetInteger(actionArgument, -1)) {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RefreshData = true;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; catch (Exception ex)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EventLogProvider.LogException(&amp;quot;OrderableBindingEditorUniSelectorExtender&amp;quot;, &amp;quot;ActionRefreshError&amp;quot;, ex, additionalMessage: &amp;quot;Something went wrong trying to detect if binding UI should be refreshed, please ensure both Binding Object and Bound Object types are properly set.&amp;quot;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &amp;quot;custom_movedown&amp;quot;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((IOrderableBaseInfo)BindingObj).MoveObjectDown();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If the current item is the &amp;quot;last&amp;quot; item on the current page, refresh as it may now be on another page&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var DownRows = ((DataSet)Control.UniGrid.DataSource).Tables[0].Rows;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (ValidationHelper.GetInteger(DownRows[DownRows.Count - 1][((BaseInfo)ObjectSingleton).TypeInfo.IDColumn], -1) == ValidationHelper.GetInteger(actionArgument, -1)) {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RefreshData = true;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; catch (Exception ex)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EventLogProvider.LogException(&amp;quot;OrderableBindingEditorUniSelectorExtender&amp;quot;, &amp;quot;ActionRefreshError&amp;quot;, ex, additionalMessage: &amp;quot;Something went wrong trying to detect if binding UI should be refreshed, please ensure both Binding Object and Bound Object types are properly set.&amp;quot;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If an element is moved off the current page, the grid needs to be refreshed, and the only way to seem to get the UI to update is to totally refresh the page&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (RefreshData)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string Url = RequestContext.RawURL;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(Control.UniGrid.Pager != null) {&amp;nbsp;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int CurrentPage = Control.UniGrid.Pager.CurrentPage;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int CurrentPageSize = Control.UniGrid.Pager.CurrentPageSize;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Url = URLHelper.AddParameterToUrl(Url, &amp;quot;OrderableUniPage&amp;quot;, CurrentPage.ToString());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Url = URLHelper.AddParameterToUrl(Url, &amp;quot;OrderableUniPageSize&amp;quot;, CurrentPageSize.ToString());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; URLHelper.ResponseRedirect(Url, true);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Dynamically adds the hidden field that is used for the custom move, reduces need to duplicate the UniGrid control.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void AddCustomMoveHiddenField()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Find the other hidden fields in the UniSelector and add this one next to it&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HiddenField hdnCustomMoveArgs = new HiddenField()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ID = &amp;quot;hdnCustomMoveArgs&amp;quot;,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value = &amp;quot;&amp;quot;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (HiddenField hidField in GetControlsOfType&amp;lt;HiddenField&amp;gt;(Control.UniGrid))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (hidField.ID == &amp;quot;hidCmdArg&amp;quot;)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hidField.Parent.Controls.Add(hdnCustomMoveArgs);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Custom logic to get the onmousedown InitMove to work on the custom moving.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;sender&amp;quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;e&amp;quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void UniGrid_PreRender(object sender, EventArgs e)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (var cmsActionButtonControl in GetControlsOfType&amp;lt;CMSGridActionButton&amp;gt;(Control.UniGrid))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (cmsActionButtonControl.CommandName == &amp;quot;custom_move&amp;quot;)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IButtonControl buttonControl = (IButtonControl)cmsActionButtonControl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (buttonControl != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UniGrid uniGridControl = Control.UniGrid;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AttributeCollection attributes = ((WebControl)buttonControl).Attributes;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; attributes[&amp;quot;onmousedown&amp;quot;] = string.Concat(uniGridControl.GetJSModule(), &amp;quot;.initMove(&amp;quot;, ScriptHelper.GetString(buttonControl.CommandArgument), &amp;quot;); return false;&amp;quot;);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; attributes[&amp;quot;onclick&amp;quot;] = &amp;quot;return false;&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmsActionButtonControl.OnClientClick = &amp;quot;return false;&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cmsActionButtonControl.CssClass += &amp;quot; no-click&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// If actions exist, make sure the Command Argument is set to the Object&amp;#39;s ID Column Name so it properly renders the ID value&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void SetActions()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Control.UniGrid.GridActions != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectFactory = new InfoObjectFactory(ObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectSingleton = (ObjectFactory != null &amp;amp;&amp;amp; ObjectFactory.Singleton != null ? ObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.GridActions.Parameters = ((BaseInfo)ObjectSingleton).TypeInfo.IDColumn;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (Action action in Control.UniGrid.GridActions.Actions)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; action.CommandArgument = ((BaseInfo)ObjectSingleton).TypeInfo.IDColumn;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Register the Move Command Script, this leverages a customized UniGrid.js module to work with the new custom_move property&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; protected void RegisterCmdScripts()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;HiddenField&amp;gt; HiddenFields = GetControlsOfType&amp;lt;HiddenField&amp;gt;(Control.UniGrid).ToList();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bool MoveActionFound = (Control.UniGrid.GridActions == null ? false : Control.UniGrid.GridActions.Actions.OfType&amp;lt;Action&amp;gt;().Any&amp;lt;Action&amp;gt;((Action action) =&amp;gt; action.Name.Equals(&amp;quot;custom_move&amp;quot;, StringComparison.OrdinalIgnoreCase)));&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; object variable = new&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; id = Control.UniGrid.ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uniqueId = Control.UniGrid.UniqueID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hdnCmdNameId = HiddenFields.Where(x =&amp;gt; x.ID == &amp;quot;hidCmdName&amp;quot;).First().ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hdnCmdArgId = HiddenFields.Where(x =&amp;gt; x.ID == &amp;quot;hidCmdArg&amp;quot;).First().ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hdnSelHashId = HiddenFields.Where(x =&amp;gt; x.ID == &amp;quot;hidSelectionHash&amp;quot;).First().ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hdnSelId = HiddenFields.Where(x =&amp;gt; x.ID == &amp;quot;hidSelection&amp;quot;).First().ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // This one is a custom field for our custom move logic&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hdnCustomMoveArgs = HiddenFields.Where(x =&amp;gt; x.ID == &amp;quot;hdnCustomMoveArgs&amp;quot;).First().ClientID,&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; gridId = Control.UniGrid.GridView.ClientID,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resetSelection = false,&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; allowSorting = true&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScriptHelper.EnsurePostbackMethods(Control.UniGrid);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScriptHelper.RegisterModule(Control.UniGrid, &amp;quot;RelationshipsExtended/UniGrid&amp;quot;, variable);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (MoveActionFound)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScriptHelper.RegisterJQueryUI(Control.Page, true);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ScriptHelper.RegisterStartupScript(Control.Page, Control.UniGrid.GetType(), &amp;quot;KillMoveClick&amp;quot;, &amp;quot;$cmsj(document).ready(function() { $cmsj(&amp;#39;.no-click&amp;#39;).unbind(&amp;#39;click&amp;#39;); });&amp;quot;, true);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Since the normal Binding UniGrid only shows a summary of the Object that is bound, it does nto have the built in&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Order that would be on the Binding Object. &amp;nbsp;So I&amp;#39;m programatically adding on an Order Column, then returning the&amp;nbsp;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Items in that order using a Table View.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;ds&amp;quot;&amp;gt;The Dataset&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;returns&amp;gt;The ordered data set&amp;lt;/returns&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private DataSet UniGrid_OnAfterRetrieveData(DataSet ds)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Get the object and binding object&amp;#39;s information (typeinfo) and their referencing column names.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectFactory = new InfoObjectFactory(BindingObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var BindingObjectSingleton = (BindingObjectFactory != null &amp;amp;&amp;amp; BindingObjectFactory.Singleton != null ? BindingObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectFactory = new InfoObjectFactory(ObjectType);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var ObjectSingleton = (ObjectFactory != null &amp;amp;&amp;amp; ObjectFactory.Singleton != null ? ObjectFactory.Singleton : null);&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string ParentObjectReference = ((IBindingBaseInfo)BindingObjectSingleton).ParentObjectReferenceColumnName();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string BoundObjectReference = ((IBindingBaseInfo)BindingObjectSingleton).BoundObjectReferenceColumnName();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string ObjectIDColumn = ((BaseInfo)ObjectSingleton).TypeInfo.IDColumn;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string OrderColumn = ((BaseInfo)BindingObjectSingleton).TypeInfo.OrderColumn;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string DisplayNameColumn = ((BaseInfo)BindingObjectSingleton).TypeInfo.DisplayNameColumn;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Just sort the data by the order&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!ds.Tables[0].Columns.Contains(&amp;quot;OrderableObjectUniSelector_Order&amp;quot;))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ds.Tables[0].Columns.Add(&amp;quot;OrderableObjectUniSelector_Order&amp;quot;, typeof(int));&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Go through each entry and find the proper Order and assign it.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (DataRow dr in ds.Tables[0].Rows)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var OrderItem = new ObjectQuery(BindingObjectType)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .WhereEquals(ParentObjectReference, CorrectObjectID)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .WhereEquals(BoundObjectReference, dr[ObjectIDColumn])&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .FirstObject;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (OrderItem != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dr[&amp;quot;OrderableObjectUniSelector_Order&amp;quot;] = ValidationHelper.GetInteger(OrderItem.GetValue(OrderColumn), 0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dr[&amp;quot;OrderableObjectUniSelector_Order&amp;quot;] = 999999999;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Sort by the Order and return the new table, now sorted properly.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataView DV = new DataView(ds.Tables[0]);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DV.Sort = &amp;quot;[OrderableObjectUniSelector_Order] asc&amp;quot;;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataTable dt = DV.ToTable();&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Now that the items are ordered, we need to limit the results to the Page and Page Size&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Get the current Page and page size, adjusting if that page no longer exists due to record deletion&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int PageSize = 10;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int CurrentPage = 1;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Control.UniGrid.Pager != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PageSize = Control.UniGrid.Pager.CurrentPageSize;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; CurrentPage = Control.UniGrid.Pager.CurrentPage;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataTable newDT = dt.Clone();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (dt.Rows.Count &amp;gt; 0)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; while (CurrentPage &amp;gt; 1 &amp;amp;&amp;amp; dt.Rows.Count &amp;lt;= (CurrentPage - 1) * PageSize)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; CurrentPage--;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // This event triggers twice, once on the full data, and once on the page-only data. &amp;nbsp;If page-only data, do NOT reset the page (unless the count is 0)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Control.UniGrid.Pager != null &amp;amp;&amp;amp; (ds.Tables[0].Rows.Count == Control.UniGrid.PagerForceNumberOfResults || ds.Tables[0].Rows.Count == 0))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Control.UniGrid.Pager.CurrentPage = CurrentPage;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Now remove any records that are not in the current page&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int LowerBound = (CurrentPage - 1) * PageSize;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int UpperBound = LowerBound + PageSize;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (int r = 0; r &amp;lt; dt.Rows.Count; r++)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (r &amp;gt;= LowerBound &amp;amp;&amp;amp; r &amp;lt; UpperBound)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newDT.ImportRow(dt.Rows[r]);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Lastly add this new sorted and &amp;#39;trimmed&amp;#39; table to the results.&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ds.Tables.Remove(ds.Tables[0]);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ds.Tables.Add(newDT);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return ds;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void UniGrid_OnAfterDataReload()&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SetActions();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private void UniGrid_Load(object sender, EventArgs e)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SetActions();&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #endregion&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// Helper Method to get recursively find controls of a given type, using this to get various Control IDs and other items on the UniGrid&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;/summary&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;typeparam name=&amp;quot;T&amp;quot;&amp;gt;&amp;lt;/typeparam&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;param name=&amp;quot;root&amp;quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public static IEnumerable&amp;lt;T&amp;gt; GetControlsOfType&amp;lt;T&amp;gt;(Control root)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp;where T : Control&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var t = root as T;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (t != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; yield return t;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var container = root as Control;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (container != null)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (Control c in container.Controls)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; foreach (var i in GetControlsOfType&amp;lt;T&amp;gt;(c))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; yield return i;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
}&lt;br /&gt;
&amp;nbsp;
&lt;h2&gt;&lt;br /&gt;
Relationship Extended Sortable Binding Customization Guide&lt;/h2&gt;

&lt;p&gt;cms\cmsscripts\cmsmodules\relationshipsextended\unigrid.js &amp;nbsp;(Added custom JS to render and handle the custom_move capabilities)&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;-From Original (cms\cmsscripts\cmsmodule\cms\unigrid.js),&amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-added 1 new parameter &amp;#39;$customMoveArgs&amp;#39; to the initialization&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-updated the initSorting function&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
CMS\CMSModules\RelationshipsExtended\UI\OrderableUniSelector\UniSelector.ascx&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;-From Original (CMS\CMSAdminControls\UI\UniSelector\UniSelector.ascx)&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-No change to ascx&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Updated the SetGridHeader() on the ascx.cs file&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -on LoadUniGrid(), update msResultDS = GetResultSet to ignore the Page Size and current offset (set to 0)&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
CMS\CMSModules\RelationshipsExtended\Controls\UIControls\OrderableBindingEditItemWithNodeSupport.ascx&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;-From Original (CMS\CMSModules\AdminControls\Controls\UIControls\BindingEditItem.ascx)&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Added Style for Move Column (ascx)&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Used OrderableUniSelector instead of normal UniSelector in control&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Added NodeID and CorrectObjectID helper properties&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Added Attributes to UniSelector (to pass to Control Extender) and Updated the UIContext.EditedObject in OnInit to handle Nodes&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;-Replaced &amp;quot;ObjectID&amp;quot; with &amp;quot;CorrectObjectID&amp;quot; in GetBindings and CreateBindings methods&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
RelationshipExtended\Classes\Extender\OrderableBindingEditorUniSelectorExtender.cs&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;-Handles the Ordering (move, move up, move down) on Binding Objects that use the&amp;nbsp;IBindingBaseInfo and&amp;nbsp;IOrderableBaseInfo&lt;br /&gt;
&amp;nbsp; &amp;nbsp; -Relies on the custom OrderableBindingEditItemWithNodeSupport.ascx control, so should only use to extend this control.&lt;/p&gt;
</WebPartDocumentation>
      <WebPartGUID>a07deaa9-6996-4ebf-933b-a6f8a7e1e311</WebPartGUID>
      <WebPartLastModified>2019-03-27T13:15:44.0455291-05:00</WebPartLastModified>
      <WebPartType>9</WebPartType>
      <WebPartLoadGeneration>0</WebPartLoadGeneration>
      <WebPartDefaultValues>&lt;form /&gt;</WebPartDefaultValues>
      <WebPartSkipInsertProperties>false</WebPartSkipInsertProperties>
      <WebPartDefaultConfiguration>&lt;page /&gt;</WebPartDefaultConfiguration>
      <WebPartIconClass>icon-w-edit-bindings</WebPartIconClass>
    </cms_webpart>
    <cms_webpart>
      <WebPartID>2702</WebPartID>
      <WebPartName>RelationshipExtended_RelatedPageSelector</WebPartName>
      <WebPartDisplayName>Related Page Selector</WebPartDisplayName>
      <WebPartFileName>~/CMSModules/RelationshipsExtended/Controls/RelatedPage_UniSelector.ascx</WebPartFileName>
      <WebPartProperties>&lt;form version="2"&gt;&lt;field column="RelationshipName" columnsize="200" columntype="text" guid="74034cbd-0a54-40c5-9c42-b98293cbbf6d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Relationship Name&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="DirectionMode" columnsize="50" columntype="text" guid="d3463fa8-47e3-4e93-a2e9-4d9e22101f09" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;LeftNode&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Current Node Direction&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;LeftNode;Left Side
RightNode;Right Side&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="AllowSwitchSides" columntype="boolean" guid="ca522a3e-15b3-497a-9c48-81a74db195fc" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;False&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Allow Switch Sides&lt;/fieldcaption&gt;&lt;fielddescription&gt;Check if you wish to allow an assignment of documents that is flipped from the normal Direction.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="AllowedPageTypes" columntype="longtext" guid="cda35b98-132f-45eb-8868-90cdac87e6bf" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Allowed Page Types&lt;/fieldcaption&gt;&lt;fielddescription&gt;Page types that you can assign to this relationship.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AddGlobalObjectNamePrefix&gt;False&lt;/AddGlobalObjectNamePrefix&gt;&lt;AddGlobalObjectSuffix&gt;False&lt;/AddGlobalObjectSuffix&gt;&lt;AllowAll&gt;False&lt;/AllowAll&gt;&lt;AllowDefault&gt;False&lt;/AllowDefault&gt;&lt;AllowEditTextBox&gt;False&lt;/AllowEditTextBox&gt;&lt;AllowEmpty&gt;False&lt;/AllowEmpty&gt;&lt;controlname&gt;Uni_selector&lt;/controlname&gt;&lt;DialogWindowName&gt;SelectionDialog&lt;/DialogWindowName&gt;&lt;DisplayNameFormat&gt;{% ClassDisplayName %}&lt;/DisplayNameFormat&gt;&lt;EditDialogWindowHeight&gt;700&lt;/EditDialogWindowHeight&gt;&lt;EditDialogWindowWidth&gt;1000&lt;/EditDialogWindowWidth&gt;&lt;EditWindowName&gt;EditWindow&lt;/EditWindowName&gt;&lt;EncodeOutput&gt;True&lt;/EncodeOutput&gt;&lt;GlobalObjectSuffix ismacro="true"&gt;{$general.global$}&lt;/GlobalObjectSuffix&gt;&lt;ItemsPerPage&gt;25&lt;/ItemsPerPage&gt;&lt;LocalizeItems&gt;True&lt;/LocalizeItems&gt;&lt;MaxDisplayedItems&gt;25&lt;/MaxDisplayedItems&gt;&lt;MaxDisplayedTotalItems&gt;50&lt;/MaxDisplayedTotalItems&gt;&lt;ObjectSiteName&gt;#currentsite&lt;/ObjectSiteName&gt;&lt;ObjectType&gt;CMS.Class&lt;/ObjectType&gt;&lt;OrderBy&gt;ClassDisplayName&lt;/OrderBy&gt;&lt;RemoveMultipleCommas&gt;False&lt;/RemoveMultipleCommas&gt;&lt;ReturnColumnName&gt;ClassName&lt;/ReturnColumnName&gt;&lt;ReturnColumnType&gt;id&lt;/ReturnColumnType&gt;&lt;SelectionMode&gt;2&lt;/SelectionMode&gt;&lt;UseDefaultNameFilter&gt;True&lt;/UseDefaultNameFilter&gt;&lt;ValuesSeparator&gt;;&lt;/ValuesSeparator&gt;&lt;WhereCondition&gt;ClassIsDocumentType = 1&lt;/WhereCondition&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="WhereCondition" columntype="longtext" guid="b233d28f-7814-4889-9cde-17272534864b" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Where Condition&lt;/fieldcaption&gt;&lt;fielddescription&gt;Additional Where Condition on which pages should be displayed.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;WhereCondition&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="CurrentNodeID" columntype="integer" guid="d2fb525c-02d5-42d7-bfa9-a63b682a2bd3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Current NodeID&lt;/fieldcaption&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="BindOnPrimaryNodeOnly" columntype="boolean" guid="3dc78461-0edf-4a9f-ab79-8d429344f5f3" publicfield="false" reftype="Required" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;True&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Bind On Primary Node Only&lt;/fieldcaption&gt;&lt;fielddescription&gt;If the current Node is a Linked Document, this will edit bindings on the primary node instead of the linked node.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field column="MaxRelationships" columntype="integer" guid="f176f64f-7a62-483d-8cfd-b62813fae536" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;-1&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Max Relationships&lt;/fieldcaption&gt;&lt;fielddescription&gt;Any number below 1 means unlimited&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;category name="UniSelectorSettings"&gt;&lt;properties&gt;&lt;caption&gt;Uni Selector Settings&lt;/caption&gt;&lt;collapsedbydefault&gt;True&lt;/collapsedbydefault&gt;&lt;collapsible&gt;True&lt;/collapsible&gt;&lt;visible&gt;True&lt;/visible&gt;&lt;/properties&gt;&lt;/category&gt;&lt;field allowempty="true" column="ObjectSiteName" columnsize="200" columntype="text" guid="04049b7e-0244-4fdf-9662-d9e8e4ceda49" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Object site name&lt;/fieldcaption&gt;&lt;fielddescription&gt;If set, only objects which belong to specified site are retrieved (if the object has SiteID column). If null or empty, all objects are retrieved. Use #currentsite for CurrentSite and #global for global objects.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="DisplayNameFormat" columnsize="1000" columntype="text" guid="546202bd-6240-4154-9b23-c77f4e13aea2" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Display name format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a custom Display Name Format for the page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields. 

ex: {% NodeName %} - {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ToolTipFormat" columntype="longtext" guid="76393618-f0f1-4e43-93e6-cdfcbb650e7d" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;ToolTip Format&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can add a hover to the selectable page elements.  The Macro can use any field found in the CMS_Node, CMS_Document, and the Page Type Specific fields.

ex: {% MyField %}&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoSize&gt;False&lt;/AutoSize&gt;&lt;controlname&gt;MacroEditor&lt;/controlname&gt;&lt;EnablePositionMember&gt;False&lt;/EnablePositionMember&gt;&lt;EnableSections&gt;False&lt;/EnableSections&gt;&lt;EnableViewState&gt;False&lt;/EnableViewState&gt;&lt;Height&gt;100&lt;/Height&gt;&lt;Language&gt;0&lt;/Language&gt;&lt;ShowBookmarks&gt;False&lt;/ShowBookmarks&gt;&lt;ShowLineNumbers&gt;False&lt;/ShowLineNumbers&gt;&lt;ShowMacroSelector&gt;False&lt;/ShowMacroSelector&gt;&lt;SingleLineMode&gt;False&lt;/SingleLineMode&gt;&lt;SingleMacroMode&gt;False&lt;/SingleMacroMode&gt;&lt;SupportPasteImages&gt;False&lt;/SupportPasteImages&gt;&lt;Width&gt;100%&lt;/Width&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="SelectionMode" columntype="integer" guid="491b4922-c5ba-494a-8d15-f16666a3915e" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Selection mode&lt;/fieldcaption&gt;&lt;fielddescription&gt;Determines the design and behavior of the selection dialog.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;DropDownListControl&lt;/controlname&gt;&lt;DisplayActualValueAsItem&gt;False&lt;/DisplayActualValueAsItem&gt;&lt;EditText&gt;False&lt;/EditText&gt;&lt;Options&gt;0;Single text box
1;Single drop down list
2;Multiple
3;Multiple text box
4;Single button
5;Multiple button
6;Single transformation&lt;/Options&gt;&lt;SortItems&gt;False&lt;/SortItems&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="AdditionalColumns" columnsize="500" columntype="text" guid="5f23f000-6257-4432-a567-37e2fabb66c9" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Additional columns&lt;/fieldcaption&gt;&lt;fielddescription&gt;Specifies the names of columns that should be loaded with the objects of the specified data class (in addition to the columns required by default).&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="AdditionalSearchColumns" columntype="longtext" guid="716c1055-db9b-4974-86a3-6d619dece9b3" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Additional Search Columns&lt;/fieldcaption&gt;&lt;fielddescription&gt;Additional Search Columns, comma seperated&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="OrderBy" columnsize="500" columntype="text" guid="aa8b7f52-5c7b-4e03-b866-5ebdcc13d4e0" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Order by&lt;/fieldcaption&gt;&lt;fielddescription&gt;Sets the order of the items offered for selection via a standard ORDER BY clause. Applies to the multiple selection grid, dropdownlist, single and multiple selection dialogs.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="EnabledColumnName" columnsize="500" columntype="text" guid="cc1c41e8-4b32-4627-b9e1-9eebc7b8d415" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Enabled column name&lt;/fieldcaption&gt;&lt;fielddescription&gt;Can be used to specify the name of the column that determines if the selected object is enabled.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="MaxDisplayedTotalItems" columntype="integer" guid="c4baf034-8e12-469a-a5bf-180228981028" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;50&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Max displayed total items&lt;/fieldcaption&gt;&lt;fielddescription&gt;The number of maximum displayed total items in the dropdownlist selection (excluding the special and generic items). The default value is 50. If exceeded, only the number of items set by the MaxDisplayedItems parameter will be displayed.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="MaxDisplayedItems" columntype="integer" guid="7b8b274c-9900-44ca-aa03-adfc84fa76b7" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;25&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Max displayed items&lt;/fieldcaption&gt;&lt;fielddescription&gt;Sets the maximum number of displayed items in drop-down list mode (excluding the special and generic items). The default value is 25. If the number is exceeded, the remaining items can be selected through the (more..) option.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="ItemsPerPage" columntype="integer" guid="658e5bce-44bc-42ce-a3d1-bb0404a97ef0" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;25&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Items per page&lt;/fieldcaption&gt;&lt;fielddescription&gt;Default number of items displayed per page. Applies to the multiple selection grid, drop-down list, single and multiple selection dialogs. The default value is 25.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="FilterControl" columnsize="250" columntype="text" guid="450d75dd-a3e3-49af-80e3-2d4dd0b727b4" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;fieldcaption&gt;Filter control&lt;/fieldcaption&gt;&lt;fielddescription&gt;Sets the path to custom filter control.&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;AutoCompleteEnableCaching&gt;False&lt;/AutoCompleteEnableCaching&gt;&lt;AutoCompleteFirstRowSelected&gt;False&lt;/AutoCompleteFirstRowSelected&gt;&lt;AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;False&lt;/AutoCompleteShowOnlyCurrentWordInCompletionListItem&gt;&lt;controlname&gt;TextBoxControl&lt;/controlname&gt;&lt;FilterMode&gt;False&lt;/FilterMode&gt;&lt;Trim&gt;False&lt;/Trim&gt;&lt;/settings&gt;&lt;/field&gt;&lt;field allowempty="true" column="UseDefaultNameFilter" columntype="boolean" guid="8d75d512-52b2-4221-8d18-3f0025a0375f" publicfield="false" resolvedefaultvalue="False" visible="true"&gt;&lt;properties&gt;&lt;defaultvalue&gt;true&lt;/defaultvalue&gt;&lt;fieldcaption&gt;Default name filter usage&lt;/fieldcaption&gt;&lt;fielddescription&gt;If true, name filter is shown in dialog&lt;/fielddescription&gt;&lt;/properties&gt;&lt;settings&gt;&lt;controlname&gt;CheckBoxControl&lt;/controlname&gt;&lt;/settings&gt;&lt;/field&gt;&lt;/form&gt;</WebPartProperties>
      <WebPartCategoryID>444</WebPartCategoryID>
      <WebPartGUID>dce2cc09-e2fd-4e58-bc8f-bd66f988bed1</WebPartGUID>
      <WebPartLastModified>2019-02-05T20:22:30.7580303-06:00</WebPartLastModified>
      <WebPartType>9</WebPartType>
      <WebPartLoadGeneration>0</WebPartLoadGeneration>
      <WebPartDefaultValues>&lt;form&gt;&lt;/form&gt;</WebPartDefaultValues>
      <WebPartSkipInsertProperties>false</WebPartSkipInsertProperties>
      <WebPartDefaultConfiguration>&lt;page /&gt;</WebPartDefaultConfiguration>
      <WebPartIconClass>icon-w-webpart-default</WebPartIconClass>
    </cms_webpart>
    <cms_webpartcategory>
      <CategoryID>435</CategoryID>
      <CategoryDisplayName>UI Webparts</CategoryDisplayName>
      <CategoryName>UIWebparts</CategoryName>
      <CategoryGUID>e2799406-594e-4569-a065-5c406aeee479</CategoryGUID>
      <CategoryLastModified>2017-03-03T06:19:42.3030214-06:00</CategoryLastModified>
      <CategoryImagePath></CategoryImagePath>
      <CategoryPath>UIWebparts/</CategoryPath>
      <CategoryLevel>0</CategoryLevel>
      <CategoryChildCount>4</CategoryChildCount>
      <CategoryWebPartChildCount>0</CategoryWebPartChildCount>
    </cms_webpartcategory>
    <cms_webpartcategory>
      <CategoryID>444</CategoryID>
      <CategoryDisplayName>Edit</CategoryDisplayName>
      <CategoryParentID>435</CategoryParentID>
      <CategoryName>Edit</CategoryName>
      <CategoryGUID>9d66986a-c04d-463a-ba7d-21afa013f7bf</CategoryGUID>
      <CategoryLastModified>2017-03-03T06:19:41.2496136-06:00</CategoryLastModified>
      <CategoryImagePath></CategoryImagePath>
      <CategoryPath>UIWebparts/Edit</CategoryPath>
      <CategoryLevel>1</CategoryLevel>
      <CategoryChildCount>0</CategoryChildCount>
      <CategoryWebPartChildCount>7</CategoryWebPartChildCount>
    </cms_webpartcategory>
    <cms_webpartcategory>
      <CategoryID>447</CategoryID>
      <CategoryDisplayName>General</CategoryDisplayName>
      <CategoryParentID>435</CategoryParentID>
      <CategoryName>General_1</CategoryName>
      <CategoryGUID>7f843143-91fa-4b99-97c8-26d7a8d22eda</CategoryGUID>
      <CategoryLastModified>2017-03-03T06:19:41.4838948-06:00</CategoryLastModified>
      <CategoryImagePath></CategoryImagePath>
      <CategoryPath>UIWebparts/General_1</CategoryPath>
      <CategoryLevel>1</CategoryLevel>
      <CategoryChildCount>0</CategoryChildCount>
      <CategoryWebPartChildCount>11</CategoryWebPartChildCount>
    </cms_webpartcategory>
    <cms_webpartcategory>
      <CategoryID>446</CategoryID>
      <CategoryDisplayName>Selector</CategoryDisplayName>
      <CategoryParentID>435</CategoryParentID>
      <CategoryName>Selector</CategoryName>
      <CategoryGUID>f1bbda0a-8a2d-4333-82da-6ea14daf48a1</CategoryGUID>
      <CategoryLastModified>2017-03-03T06:19:42.072028-06:00</CategoryLastModified>
      <CategoryImagePath></CategoryImagePath>
      <CategoryPath>UIWebparts/Selector</CategoryPath>
      <CategoryLevel>1</CategoryLevel>
      <CategoryChildCount>0</CategoryChildCount>
      <CategoryWebPartChildCount>4</CategoryWebPartChildCount>
    </cms_webpartcategory>
  </NewDataSet>
</cms_webpart>